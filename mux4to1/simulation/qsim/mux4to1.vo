// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "06/04/2025 23:15:15"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module mux4to1 (
	din,
	sel,
	dout);
input 	[3:0] din;
input 	[1:0] sel;
output 	dout;

// Design Ports Information
// dout	=>  Location: PIN_R2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// din[1]	=>  Location: PIN_U2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel[0]	=>  Location: PIN_L6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// din[2]	=>  Location: PIN_M8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel[1]	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// din[0]	=>  Location: PIN_M3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// din[3]	=>  Location: PIN_N5,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \dout~output_o ;
wire \din[3]~input_o ;
wire \din[1]~input_o ;
wire \sel[0]~input_o ;
wire \sel[1]~input_o ;
wire \din[0]~input_o ;
wire \din[2]~input_o ;
wire \m2|c~0_combout ;
wire \m2|c~1_combout ;


// Location: IOOBUF_X0_Y10_N2
cycloneiii_io_obuf \dout~output (
	.i(\m2|c~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dout~output_o ),
	.obar());
// synopsys translate_off
defparam \dout~output .bus_hold = "false";
defparam \dout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y10_N15
cycloneiii_io_ibuf \din[3]~input (
	.i(din[3]),
	.ibar(gnd),
	.o(\din[3]~input_o ));
// synopsys translate_off
defparam \din[3]~input .bus_hold = "false";
defparam \din[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y9_N8
cycloneiii_io_ibuf \din[1]~input (
	.i(din[1]),
	.ibar(gnd),
	.o(\din[1]~input_o ));
// synopsys translate_off
defparam \din[1]~input .bus_hold = "false";
defparam \din[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y13_N1
cycloneiii_io_ibuf \sel[0]~input (
	.i(sel[0]),
	.ibar(gnd),
	.o(\sel[0]~input_o ));
// synopsys translate_off
defparam \sel[0]~input .bus_hold = "false";
defparam \sel[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneiii_io_ibuf \sel[1]~input (
	.i(sel[1]),
	.ibar(gnd),
	.o(\sel[1]~input_o ));
// synopsys translate_off
defparam \sel[1]~input .bus_hold = "false";
defparam \sel[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y12_N8
cycloneiii_io_ibuf \din[0]~input (
	.i(din[0]),
	.ibar(gnd),
	.o(\din[0]~input_o ));
// synopsys translate_off
defparam \din[0]~input .bus_hold = "false";
defparam \din[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y7_N1
cycloneiii_io_ibuf \din[2]~input (
	.i(din[2]),
	.ibar(gnd),
	.o(\din[2]~input_o ));
// synopsys translate_off
defparam \din[2]~input .bus_hold = "false";
defparam \din[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N0
cycloneiii_lcell_comb \m2|c~0 (
// Equation(s):
// \m2|c~0_combout  = (\sel[1]~input_o  & (((\sel[0]~input_o ) # (\din[2]~input_o )))) # (!\sel[1]~input_o  & (\din[0]~input_o  & (!\sel[0]~input_o )))

	.dataa(\sel[1]~input_o ),
	.datab(\din[0]~input_o ),
	.datac(\sel[0]~input_o ),
	.datad(\din[2]~input_o ),
	.cin(gnd),
	.combout(\m2|c~0_combout ),
	.cout());
// synopsys translate_off
defparam \m2|c~0 .lut_mask = 16'hAEA4;
defparam \m2|c~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N18
cycloneiii_lcell_comb \m2|c~1 (
// Equation(s):
// \m2|c~1_combout  = (\sel[0]~input_o  & ((\m2|c~0_combout  & (\din[3]~input_o )) # (!\m2|c~0_combout  & ((\din[1]~input_o ))))) # (!\sel[0]~input_o  & (((\m2|c~0_combout ))))

	.dataa(\din[3]~input_o ),
	.datab(\din[1]~input_o ),
	.datac(\sel[0]~input_o ),
	.datad(\m2|c~0_combout ),
	.cin(gnd),
	.combout(\m2|c~1_combout ),
	.cout());
// synopsys translate_off
defparam \m2|c~1 .lut_mask = 16'hAFC0;
defparam \m2|c~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign dout = \dout~output_o ;

endmodule
