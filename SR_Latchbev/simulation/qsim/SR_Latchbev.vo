// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "06/17/2025 21:17:45"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module SR_Latchbev (
	s,
	r,
	q,
	q_bar);
input 	s;
input 	r;
output 	q;
output 	q_bar;

// Design Ports Information
// q	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q_bar	=>  Location: PIN_N9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s	=>  Location: PIN_M4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// r	=>  Location: PIN_K8,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \q~output_o ;
wire \q_bar~output_o ;
wire \r~input_o ;
wire \s~input_o ;
wire \comb~1_combout ;
wire \comb~0_combout ;
wire \q$latch~combout ;


// Location: IOOBUF_X10_Y0_N9
cycloneiv_io_obuf \q~output (
	.i(\q$latch~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q~output_o ),
	.obar());
// synopsys translate_off
defparam \q~output .bus_hold = "false";
defparam \q~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X20_Y0_N2
cycloneiv_io_obuf \q_bar~output (
	.i(!\q$latch~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q_bar~output_o ),
	.obar());
// synopsys translate_off
defparam \q_bar~output .bus_hold = "false";
defparam \q_bar~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X22_Y0_N8
cycloneiv_io_ibuf \r~input (
	.i(r),
	.ibar(gnd),
	.o(\r~input_o ));
// synopsys translate_off
defparam \r~input .bus_hold = "false";
defparam \r~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X8_Y0_N1
cycloneiv_io_ibuf \s~input (
	.i(s),
	.ibar(gnd),
	.o(\s~input_o ));
// synopsys translate_off
defparam \s~input .bus_hold = "false";
defparam \s~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X12_Y6_N10
cycloneiv_lcell_comb \comb~1 (
// Equation(s):
// \comb~1_combout  = (\r~input_o ) # (!\s~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\r~input_o ),
	.datad(\s~input_o ),
	.cin(gnd),
	.combout(\comb~1_combout ),
	.cout());
// synopsys translate_off
defparam \comb~1 .lut_mask = 16'hF0FF;
defparam \comb~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X12_Y6_N0
cycloneiv_lcell_comb \comb~0 (
// Equation(s):
// \comb~0_combout  = (\s~input_o ) # (!\r~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\r~input_o ),
	.datad(\s~input_o ),
	.cin(gnd),
	.combout(\comb~0_combout ),
	.cout());
// synopsys translate_off
defparam \comb~0 .lut_mask = 16'hFF0F;
defparam \comb~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X12_Y6_N12
cycloneiv_lcell_comb q$latch(
// Equation(s):
// \q$latch~combout  = (\comb~0_combout  & ((\q$latch~combout ) # (!\comb~1_combout )))

	.dataa(\comb~1_combout ),
	.datab(\comb~0_combout ),
	.datac(gnd),
	.datad(\q$latch~combout ),
	.cin(gnd),
	.combout(\q$latch~combout ),
	.cout());
// synopsys translate_off
defparam q$latch.lut_mask = 16'hCC44;
defparam q$latch.sum_lutc_input = "datac";
// synopsys translate_on

assign q = \q~output_o ;

assign q_bar = \q_bar~output_o ;

endmodule
